{"ast":null,"code":"var _jsxFileName = \"/Users/jamiewalton/Desktop/Classification_v2/frontend/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlanktonImage extends React.Component {\n  render() {\n    const url = this.props.nameSpace + this.props.timestamp + '_' + this.props.ifcb + '_' + this.props.targetNum + '.jpg';\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      className: \"image\",\n      alt: this.props.classification,\n      id: this.props.targetNum + '-image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass Plankton extends React.Component {\n  renderImage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlanktonImage, {\n        nameSpace: this.props.nameSpace,\n        timestamp: this.props.timestamp,\n        ifcb: this.props.ifcb,\n        targetNum: this.props.targetNum,\n        classification: this.props.classification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"plankton-button\",\n      onClick: () => this.props.onClick(this.props.id),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plankton\",\n        children: [this.renderImage(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"id\",\n          id: this.props.targetNum,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"id-text\",\n            id: this.props.targetNum + '_text',\n            children: this.props.classification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass ClassMenu extends React.Component {\n  render() {\n    const options = this.props.classes.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: x,\n        onClick: () => this.props.onClick(x),\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this)\n    }, x, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Annotations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: [// change options to be admin defined later (likely with Django)\n      'Akashiwo', 'Alexandrium Singlet', 'AmyGonyProtoc', 'Asterionellopsis', 'Centric', 'Ceratium', 'Chaetoceros', 'Cochlodinium', 'Cryptophyte, NanoP Less10, Small Misc', 'CylNitz', 'DetCerLau', 'Dictyocha', 'Dinophysis', 'Eucampia', 'GuinDact', 'Gymnodinium, Peridinium', 'Lingulodinium', 'Pennate', 'Prorocentrum', 'Pseudo-Nitzschia', 'Scrip Het', 'Skeletonema', 'Thalassionema', 'Thalassiosira', 'Unclassified'],\n      classPicker: 'Unclassified',\n      nameSpace: 'http://128.114.25.154:8888/IFCB104/',\n      // change to dynamic on backend\n      timestamp: 'D20210612T212626',\n      ifcb: 'IFCB104',\n      bin: [{\n        id: 0,\n        number: '00201',\n        classification: null\n      }, {\n        id: 1,\n        number: '00202',\n        classification: null\n      }, {\n        id: 2,\n        number: '00203',\n        classification: null\n      }, {\n        id: 3,\n        number: '00204',\n        classification: null\n      }],\n      rows: [['00201', '00202', '00203', '00204', '00205', '00206'], ['00207', '00208', '00209', '00210', '00211', '00212'], ['00213', '00214', '00215', '00216', '00217', '00218'], ['00219', '00220', '00221', '00222', '00223', '00224'], ['00225', '00226', '00227', '00228', '00229', '00230'], ['00231', '00232', '00233', '00234', '00235', '00236']],\n      rowSpacing: [] // change to pull images from data base and dynamically create keys with all null values\n      // use height and width of each image to calculate row (based on flexbox width) on backend\n\n    };\n  }\n\n  handlePlanktonClick(i) {\n    const bin = this.state.bin;\n    bin[i].classification = this.state.classPicker;\n    this.setState({\n      bin: bin\n    });\n    const container = document.getElementById(bin[i].number);\n    const text = document.getElementById(bin[i].number + '_text');\n    container.style.backgroundColor = '#16609F';\n    text.style.color = '#FFFFFF';\n  }\n\n  handleMenuClick(name) {\n    // fix hover later\n    const prev = document.getElementById(this.state.classPicker);\n    prev.style.backgroundColor = '#079CCC';\n    this.state.classPicker = name;\n    const btn = document.getElementById(name);\n    btn.style.backgroundColor = '#16609F';\n    const ids = document.getElementsByClassName('id');\n    const idTexts = document.getElementsByClassName('id-text');\n\n    for (let i = 0; i < ids.length; i++) {\n      if (ids[i].style.backgroundColor !== '#FFFFFF') {\n        ids[i].style.backgroundColor = '#FFFFFF';\n        idTexts[i].style.color = '#4E4E4E';\n      }\n    }\n\n    for (const target of this.state.bin) {\n      if (target.classification === name) {\n        const container = document.getElementById(target.id);\n        const text = document.getElementById(target.id + '_text');\n        container.style.backgroundColor = '#16609F';\n        text.style.color = '#FFFFFF';\n      }\n    }\n  }\n  /* Fix this entire function later (will need updates to bin and row calls)\n  handleRowClick(row) {\n      for (const sample of this.state.rows[row]) {\n          this.state.bin[sample] = this.state.classPicker;\n          const container = document.getElementById(sample);\n          const text = document.getElementById(sample+'_text');\n          container.style.backgroundColor = '#16609F';\n          text.style.color = '#FFFFFF';\n      }\n      this.setState({bin: this.state.bin});\n  }\n  */\n\n\n  handleSelectAllClick() {\n    const bin = this.state.bin;\n\n    for (let i = 0; i < bin.length; i++) {\n      bin[i].classification = this.state.classPicker;\n      const container = document.getElementById(bin[i].number);\n      const text = document.getElementById(bin[i].number + '_text');\n      container.style.backgroundColor = '#16609F';\n      text.style.color = '#FFFFFF';\n    }\n\n    this.setState({\n      bin: bin\n    });\n  }\n\n  renderPlankton(i) {\n    return /*#__PURE__*/_jsxDEV(Plankton, {\n      nameSpace: this.state.nameSpace,\n      timestamp: this.state.timestamp,\n      ifcb: this.state.ifcb,\n      id: i,\n      targetNum: this.state.bin[i].number,\n      classification: this.state.bin[i].classification,\n      onClick: i => this.handlePlanktonClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderClassMenu() {\n    return /*#__PURE__*/_jsxDEV(ClassMenu, {\n      classes: this.state.classes,\n      onClick: name => this.handleMenuClick(name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotations\",\n      children: [this.renderClassMenu(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"annotation-control\",\n            onClick: () => this.handleSelectAllClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"select-all\",\n              src: \"icons/select-white.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"control-text\",\n              children: \"Select All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"annotation-control\",\n            onClick: () => this.handleSelectAllClick(),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"control-text\",\n              children: \"Undo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-grid\",\n          children: this.state.bin.map(target => this.renderPlankton(target.id))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jamiewalton/Desktop/Classification_v2/frontend/src/App.js"],"names":["PlanktonImage","React","Component","render","url","props","nameSpace","timestamp","ifcb","targetNum","classification","Plankton","renderImage","onClick","id","ClassMenu","options","classes","map","x","Annotations","constructor","state","classPicker","bin","number","rows","rowSpacing","handlePlanktonClick","i","setState","container","document","getElementById","text","style","backgroundColor","color","handleMenuClick","name","prev","btn","ids","getElementsByClassName","idTexts","length","target","handleSelectAllClick","renderPlankton","renderClassMenu"],"mappings":"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","sourcesContent":["class PlanktonImage extends React.Component {\n\n  render() {\n  const url = this.props.nameSpace + this.props.timestamp + '_' + this.props.ifcb + '_' + this.props.targetNum + '.jpg';\n      return(\n          <img src={url} className=\"image\" alt={this.props.classification} id={this.props.targetNum + '-image'}></img>\n      );\n  }\n}\n\nclass Plankton extends React.Component {\n  \n  renderImage() {\n      return (\n      <div>\n          <PlanktonImage \n              nameSpace={this.props.nameSpace}\n              timestamp={this.props.timestamp}\n              ifcb={this.props.ifcb}\n              targetNum={this.props.targetNum}\n              classification={this.props.classification}\n          />\n      </div>\n      );\n  }\n\n  render() {\n      return(\n          <button className=\"plankton-button\" onClick={() => this.props.onClick(this.props.id)}>\n              <div className=\"plankton\">\n                  {this.renderImage()}\n                  <div className=\"id\" id={this.props.targetNum}>\n                      <p className=\"id-text\" id={this.props.targetNum + '_text'}>{this.props.classification}</p>\n                  </div>\n              </div>\n          </button>\n      );\n  }\n}\n\nclass ClassMenu extends React.Component {\n  render() {\n      const options = this.props.classes.map((x) => \n      <li key={x}><button id={x} onClick={() => this.props.onClick(x)}>{x}</button></li>);\n      return(\n      <div className=\"class-menu\">\n          <ul>{options}</ul>\n      </div>\n      );\n  }\n}\n\nclass Annotations extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          classes: [ // change options to be admin defined later (likely with Django)\n              'Akashiwo', \n              'Alexandrium Singlet', \n              'AmyGonyProtoc', \n              'Asterionellopsis',\n              'Centric',\n              'Ceratium',\n              'Chaetoceros',\n              'Cochlodinium',\n              'Cryptophyte, NanoP Less10, Small Misc',\n              'CylNitz',\n              'DetCerLau',\n              'Dictyocha',\n              'Dinophysis',\n              'Eucampia',\n              'GuinDact',\n              'Gymnodinium, Peridinium',\n              'Lingulodinium',\n              'Pennate',\n              'Prorocentrum',\n              'Pseudo-Nitzschia',\n              'Scrip Het',\n              'Skeletonema',\n              'Thalassionema',\n              'Thalassiosira',\n              'Unclassified'\n          ],\n          classPicker: 'Unclassified',\n          nameSpace: 'http://128.114.25.154:8888/IFCB104/', // change to dynamic on backend\n          timestamp: 'D20210612T212626',\n          ifcb: 'IFCB104',\n          bin: [\n              {id: 0, number: '00201', classification: null},\n              {id: 1, number: '00202', classification: null},\n              {id: 2, number: '00203', classification: null},\n              {id: 3, number: '00204', classification: null},\n          ],\n          rows: [\n              ['00201', '00202', '00203', '00204', '00205', '00206'], \n              ['00207', '00208', '00209', '00210', '00211', '00212'], \n              ['00213', '00214', '00215', '00216', '00217', '00218'],\n              ['00219', '00220', '00221', '00222', '00223', '00224'],\n              ['00225', '00226', '00227', '00228', '00229', '00230'],\n              ['00231', '00232', '00233', '00234', '00235', '00236'],\n          ],\n\n          rowSpacing: [],\n\n          // change to pull images from data base and dynamically create keys with all null values\n          // use height and width of each image to calculate row (based on flexbox width) on backend\n      }\n  }\n  \n  handlePlanktonClick(i) {\n      const bin = this.state.bin;\n      bin[i].classification = this.state.classPicker;\n      this.setState({bin: bin});\n      const container = document.getElementById(bin[i].number);\n      const text = document.getElementById(bin[i].number+'_text');\n      container.style.backgroundColor = '#16609F';\n      text.style.color = '#FFFFFF';\n  }\n\n  handleMenuClick(name) {\n      // fix hover later\n      const prev = document.getElementById(this.state.classPicker);\n      prev.style.backgroundColor = '#079CCC';\n      this.state.classPicker = name;\n      const btn = document.getElementById(name);\n      btn.style.backgroundColor = '#16609F';\n\n      const ids = document.getElementsByClassName('id');\n      const idTexts = document.getElementsByClassName('id-text');\n      for (let i=0; i<ids.length; i++) {\n          if (ids[i].style.backgroundColor !== '#FFFFFF') {\n              ids[i].style.backgroundColor = '#FFFFFF';\n              idTexts[i].style.color = '#4E4E4E';\n          }\n      }\n      \n      for (const target of this.state.bin) {\n          if (target.classification === name) {\n              const container = document.getElementById(target.id);\n              const text = document.getElementById(target.id+'_text');\n              container.style.backgroundColor = '#16609F';\n              text.style.color = '#FFFFFF';\n          }\n      }\n  }\n\n  /* Fix this entire function later (will need updates to bin and row calls)\n  handleRowClick(row) {\n      for (const sample of this.state.rows[row]) {\n          this.state.bin[sample] = this.state.classPicker;\n          const container = document.getElementById(sample);\n          const text = document.getElementById(sample+'_text');\n          container.style.backgroundColor = '#16609F';\n          text.style.color = '#FFFFFF';\n      }\n      this.setState({bin: this.state.bin});\n  }\n  */\n\n  handleSelectAllClick() {\n      const bin = this.state.bin;\n      for (let i = 0; i < bin.length; i++) {\n          bin[i].classification = this.state.classPicker;\n          const container = document.getElementById(bin[i].number);\n          const text = document.getElementById(bin[i].number+'_text');\n          container.style.backgroundColor = '#16609F';\n          text.style.color = '#FFFFFF';\n      }\n      this.setState({bin: bin});\n  }\n  \n  renderPlankton(i) {\n      return (\n          <Plankton \n              nameSpace={this.state.nameSpace}\n              timestamp={this.state.timestamp}\n              ifcb={this.state.ifcb}\n              id={i}\n              targetNum={this.state.bin[i].number}\n              classification={this.state.bin[i].classification}\n              onClick={(i) => this.handlePlanktonClick(i)}\n          />\n      );\n  }\n\n  renderClassMenu() {\n      return <ClassMenu \n          classes={this.state.classes}\n          onClick={(name) => this.handleMenuClick(name)}\n      />;\n  }\n\n  render() {\n      return(\n      <div className=\"annotations\">\n          {this.renderClassMenu()}\n          <div>\n              <div className=\"control-box\">\n                  <div className=\"annotation-control\" onClick={() =>  this.handleSelectAllClick()}>\n                      <img className=\"select-all\" src=\"icons/select-white.png\"></img>\n                      <p className=\"control-text\">Select All</p>\n                  </div>\n                  <div className=\"annotation-control\" onClick={() =>  this.handleSelectAllClick()}>\n                      <p className=\"control-text\">Undo</p>\n                  </div>\n              </div>\n              <div className=\"image-grid\">\n                  {this.state.bin.map((target) => this.renderPlankton(target.id))}\n              </div>\n          </div>\n      </div>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}